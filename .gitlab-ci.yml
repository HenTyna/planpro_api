stages:
  - test
  - deploy

variables:
  RAILWAY_TOKEN: $RAILWAY_TOKEN
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

# Cache Gradle dependencies
cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - .gradle/
    - build/
    - gradle/
    - ~/.gradle/caches/

test:
  stage: test
  image: gradle:8.5-jdk17
  before_script:
    - pwd  # Show current directory
    - ls -la  # Debug: Verify files in CI
    - echo "Checking for Gradle files:"
    - ls -la build.gradle settings.gradle gradlew 2>/dev/null || echo "Some Gradle files missing"
    - chmod +x ./gradlew  # Ensure wrapper is executable
    - echo "Gradle wrapper version:"
    - ./gradlew --version
  script:
    - echo "Running tests with Gradle wrapper..."
    - ./gradlew test --no-daemon --info  # Use wrapper with more verbose output
  only:
    - main
    - develop
  artifacts:
    reports:
      junit: build/test-results/test/TEST-*.xml
    expire_in: 1 week
  coverage: '/Total.*?([0-9]{1,3})%/'

build:
  stage: test
  image: gradle:8.5-jdk17
  before_script:
    - pwd  # Show current directory
    - ls -la  # Debug: Verify files
    - echo "Checking for Gradle files:"
    - ls -la build.gradle settings.gradle gradlew 2>/dev/null || echo "Some Gradle files missing"
    - chmod +x ./gradlew
    - echo "Gradle wrapper version:"
    - ./gradlew --version
  script:
    - echo "Building with Gradle wrapper..."
    - ./gradlew build --no-daemon --info  # Use wrapper with more verbose output
  artifacts:
    paths:
      - build/libs/*.jar
    expire_in: 1 week
  only:
    - main
    - develop

deploy-to-railway:
  stage: deploy
  image: node:18-alpine
  before_script:
    - npm install -g @railway/cli@latest
  script:
    - echo "Setting up Railway authentication..."
    - echo "RAILWAY_TOKEN is set: $([ ! -z "$RAILWAY_TOKEN" ] && echo 'YES' || echo 'NO')"
    - echo "Checking Railway status..."
    - railway status || echo "Status check failed, continuing..."
    - echo "Linking to Railway project..."
    - railway link --project $RAILWAY_PROJECT_ID || echo "Link failed, trying without project ID..."
    - echo "Deploying to Railway..."
    - railway up
  only:
    - main
  environment:
    name: production
    url: https://planpro-api.up.railway.app
  when: manual
  allow_failure: false

deploy-to-staging:
  stage: deploy
  image: node:18-alpine
  before_script:
    - npm install -g @railway/cli@latest
  script:
    - echo "Setting up Railway authentication..."
    - echo "RAILWAY_TOKEN is set: $([ ! -z "$RAILWAY_TOKEN" ] && echo 'YES' || echo 'NO')"
    - echo "Checking Railway status..."
    - railway status || echo "Status check failed, continuing..."
    - echo "Linking to Railway project..."
    - railway link --project $RAILWAY_PROJECT_ID || echo "Link failed, trying without project ID..."
    - echo "Deploying to Railway Staging..."
    - railway up
  only:
    - develop
  environment:
    name: staging
    url: https://planpro-api-staging.up.railway.app
  when: manual
  allow_failure: true 