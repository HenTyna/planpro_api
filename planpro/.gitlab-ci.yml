stages:
  - test
  - deploy

variables:
  RAILWAY_TOKEN: $RAILWAY_TOKEN
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

# Cache Gradle dependencies
cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - .gradle/
    - build/
    - gradle/

test:
  stage: test
  image: gradle:8.5-jdk17
  before_script:
    - chmod +x ./gradlew
    - ls -la
  script:
    - ./gradlew test --no-daemon
  only:
    - main
    - develop
  artifacts:
    reports:
      junit: build/test-results/test/TEST-*.xml
    expire_in: 1 week
  coverage: '/Total.*?([0-9]{1,3})%/'

build:
  stage: test
  image: gradle:8.5-jdk17
  before_script:
    - chmod +x ./gradlew
    - ls -la
  script:
    - ./gradlew build --no-daemon
  artifacts:
    paths:
      - build/libs/*.jar
    expire_in: 1 week
  only:
    - main
    - develop

deploy-to-railway:
  stage: deploy
  image: node:18-alpine
  before_script:
    - npm install -g @railway/cli
  script:
    - echo "Logging into Railway..."
    - railway login --token $RAILWAY_TOKEN
    - echo "Deploying to Railway..."
    - railway up --service planpro-api
  only:
    - main
  environment:
    name: production
    url: https://planpro-api.up.railway.app
  when: manual
  allow_failure: false
  dependencies:
    - build

deploy-to-staging:
  stage: deploy
  image: node:18-alpine
  before_script:
    - npm install -g @railway/cli
  script:
    - echo "Logging into Railway..."
    - railway login --token $RAILWAY_TOKEN
    - echo "Deploying to Railway Staging..."
    - railway up --service planpro-api-staging
  only:
    - develop
  environment:
    name: staging
    url: https://planpro-api-staging.up.railway.app
  when: manual
  allow_failure: true
  dependencies:
    - build 