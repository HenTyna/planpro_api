server:
  port: ${PORT:9090}

spring:
  main:
    allow-bean-definition-overriding: true
  datasource:
    url: ${DATABASE_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 10
  jpa:
    hibernate:
      ddl-auto: validate  # Changed from 'update' to 'validate'
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            non_contextual_creation: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    validate-on-migrate: true

# JWT Configuration
jwt:
  expiration: 86400000 # 24 hours
  issuer: planpro-app
  secret: ${JWT_SECRET}
  expirationMs: 86400000

# RSA Keys Configuration
rsa:
  public-key: classpath:certs/public-key.pem
  private-key: classpath:certs/private-key.pem

# Logging Configuration
logging:
  level:
    root: info
    org.hibernate: warn
    org.springframework: info

# File Storage Configuration (use temporary storage for Railway)
file:
  server-path: /tmp/uploads/
  client-path: /api/v1/image
  temp-path: /tmp/uploads/temp_qr
  base-url: ${RAILWAY_STATIC_URL}/api/v1/image
  base-image-url: ${RAILWAY_STATIC_URL}

# Telegram Configuration
telegram-setting:
  enable: true
  base-url: https://api.telegram.org
  username: ${TELEGRAM_BOT_USERNAME}
  access-token: ${TELEGRAM_BOT_TOKEN}
  bot-url: https://t.me/${TELEGRAM_BOT_USERNAME}
  share-url: https://t.me/${TELEGRAM_BOT_USERNAME}

# Swagger Configuration
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    url: /v3/api-docs
    disable-swagger-default-url: true
  api-docs:
    path: /v3/api-docs
    enabled: true 